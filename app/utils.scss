@use "sass:color";
@use "sass:list";
@use "sass:map";
@use "sass:math";

$breakpoints: (
  phone: 0,
  tablet: 37.5,
  laptop: 56.25,
  desktop: 75
);

@mixin with-breakpoint($breakpoint) {
  $width: map.get($breakpoints, $breakpoint);

  @if $width > 0 {
    @media (min-width: #{$width}rem) {
      @content
    }
  } @else {
    @content
  }
}

$colors: (
  gray: (
    light: #ffffff #454545,
    dark: #1f1f1f #efefef,
    shades: 0 100 200 300 400 500
  ),
  green: (
    light: #1ed760 #1ed760,
    dark: #1ed760 #1ed760,
    shades: 200
  )
);

@function generate-palette($start, $end, $shades) {
  $result: ();
  $length: list.length($shades);
  $min: math.min($shades...);
  $max: math.max($shades...);

  @each $shade in $shades {
    $weight: if($length > 1, math.percentage((($shade - $max) * math.div(1, $min - $max))), 0%);
    $result: map.set($result, $shade, color.mix($start, $end, $weight));
  }

  @return $result;
}

@mixin with-colors($theme) {
  @each $color, $config in $colors {
    $colors: map.get($config, $theme);
    $shades: map.get($config, shades);
    $palette: generate-palette(list.nth($colors, 1), list.nth($colors, 2), $shades);

    @each $shade, $hex in $palette {
      --#{$color + ""}-#{$shade}: #{$hex};
    }
  }
}
